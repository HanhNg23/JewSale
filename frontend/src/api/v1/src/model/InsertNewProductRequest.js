/**
 * Jewelry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductRequest from './ProductRequest';

/**
 * The InsertNewProductRequest model module.
 * @module model/InsertNewProductRequest
 * @version 1.0.0
 */
class InsertNewProductRequest {
    /**
     * Constructs a new <code>InsertNewProductRequest</code>.
     * @alias module:model/InsertNewProductRequest
     * @param productRequest {module:model/ProductRequest} 
     * @param imgFiles {Array.<File>} 
     */
    constructor(productRequest, imgFiles) { 
        
        InsertNewProductRequest.initialize(this, productRequest, imgFiles);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productRequest, imgFiles) { 
        obj['productRequest'] = productRequest;
        obj['imgFiles'] = imgFiles;
    }

    /**
     * Constructs a <code>InsertNewProductRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InsertNewProductRequest} obj Optional instance to populate.
     * @return {module:model/InsertNewProductRequest} The populated <code>InsertNewProductRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InsertNewProductRequest();

            if (data.hasOwnProperty('productRequest')) {
                obj['productRequest'] = ProductRequest.constructFromObject(data['productRequest']);
            }
            if (data.hasOwnProperty('imgFiles')) {
                obj['imgFiles'] = ApiClient.convertToType(data['imgFiles'], [File]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InsertNewProductRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InsertNewProductRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InsertNewProductRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `productRequest`
        if (data['productRequest']) { // data not null
          ProductRequest.validateJSON(data['productRequest']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['imgFiles'])) {
            throw new Error("Expected the field `imgFiles` to be an array in the JSON data but got " + data['imgFiles']);
        }

        return true;
    }


}

InsertNewProductRequest.RequiredProperties = ["productRequest", "imgFiles"];

/**
 * @member {module:model/ProductRequest} productRequest
 */
InsertNewProductRequest.prototype['productRequest'] = undefined;

/**
 * @member {Array.<File>} imgFiles
 */
InsertNewProductRequest.prototype['imgFiles'] = undefined;






export default InsertNewProductRequest;

