/**
 * Jewelry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceItem model module.
 * @module model/InvoiceItem
 * @version 1.0.0
 */
class InvoiceItem {
    /**
     * Constructs a new <code>InvoiceItem</code>.
     * @alias module:model/InvoiceItem
     */
    constructor() { 
        
        InvoiceItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvoiceItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceItem} obj Optional instance to populate.
     * @return {module:model/InvoiceItem} The populated <code>InvoiceItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceItem();

            if (data.hasOwnProperty('invoiceItemId')) {
                obj['invoiceItemId'] = ApiClient.convertToType(data['invoiceItemId'], 'Number');
            }
            if (data.hasOwnProperty('invoiceId')) {
                obj['invoiceId'] = ApiClient.convertToType(data['invoiceId'], 'Number');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'Number');
            }
            if (data.hasOwnProperty('componentBuy')) {
                obj['componentBuy'] = ApiClient.convertToType(data['componentBuy'], 'String');
            }
            if (data.hasOwnProperty('unitMeasure')) {
                obj['unitMeasure'] = ApiClient.convertToType(data['unitMeasure'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('unitPrice')) {
                obj['unitPrice'] = ApiClient.convertToType(data['unitPrice'], 'Number');
            }
            if (data.hasOwnProperty('discountPercentage')) {
                obj['discountPercentage'] = ApiClient.convertToType(data['discountPercentage'], 'Number');
            }
            if (data.hasOwnProperty('subTotal')) {
                obj['subTotal'] = ApiClient.convertToType(data['subTotal'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['componentBuy'] && !(typeof data['componentBuy'] === 'string' || data['componentBuy'] instanceof String)) {
            throw new Error("Expected the field `componentBuy` to be a primitive type in the JSON string but got " + data['componentBuy']);
        }
        // ensure the json data is a string
        if (data['unitMeasure'] && !(typeof data['unitMeasure'] === 'string' || data['unitMeasure'] instanceof String)) {
            throw new Error("Expected the field `unitMeasure` to be a primitive type in the JSON string but got " + data['unitMeasure']);
        }

        return true;
    }


}



/**
 * @member {Number} invoiceItemId
 */
InvoiceItem.prototype['invoiceItemId'] = undefined;

/**
 * @member {Number} invoiceId
 */
InvoiceItem.prototype['invoiceId'] = undefined;

/**
 * @member {Number} productId
 */
InvoiceItem.prototype['productId'] = undefined;

/**
 * @member {String} componentBuy
 */
InvoiceItem.prototype['componentBuy'] = undefined;

/**
 * @member {String} unitMeasure
 */
InvoiceItem.prototype['unitMeasure'] = undefined;

/**
 * @member {Number} quantity
 */
InvoiceItem.prototype['quantity'] = undefined;

/**
 * @member {Number} unitPrice
 */
InvoiceItem.prototype['unitPrice'] = undefined;

/**
 * @member {Number} discountPercentage
 */
InvoiceItem.prototype['discountPercentage'] = undefined;

/**
 * @member {Number} subTotal
 */
InvoiceItem.prototype['subTotal'] = undefined;






export default InvoiceItem;

