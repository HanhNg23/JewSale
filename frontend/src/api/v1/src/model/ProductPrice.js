/**
 * Jewelry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductPrice model module.
 * @module model/ProductPrice
 * @version 1.0.0
 */
class ProductPrice {
    /**
     * Constructs a new <code>ProductPrice</code>.
     * @alias module:model/ProductPrice
     */
    constructor() { 
        
        ProductPrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductPrice} obj Optional instance to populate.
     * @return {module:model/ProductPrice} The populated <code>ProductPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductPrice();

            if (data.hasOwnProperty('productPriceId')) {
                obj['productPriceId'] = ApiClient.convertToType(data['productPriceId'], 'Number');
            }
            if (data.hasOwnProperty('productId')) {
                obj['productId'] = ApiClient.convertToType(data['productId'], 'Number');
            }
            if (data.hasOwnProperty('totalMetalCost')) {
                obj['totalMetalCost'] = ApiClient.convertToType(data['totalMetalCost'], 'Number');
            }
            if (data.hasOwnProperty('totalGemstoneCost')) {
                obj['totalGemstoneCost'] = ApiClient.convertToType(data['totalGemstoneCost'], 'Number');
            }
            if (data.hasOwnProperty('laborCost')) {
                obj['laborCost'] = ApiClient.convertToType(data['laborCost'], 'Number');
            }
            if (data.hasOwnProperty('markupPercentage')) {
                obj['markupPercentage'] = ApiClient.convertToType(data['markupPercentage'], 'Number');
            }
            if (data.hasOwnProperty('salePrice')) {
                obj['salePrice'] = ApiClient.convertToType(data['salePrice'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductPrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductPrice</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} productPriceId
 */
ProductPrice.prototype['productPriceId'] = undefined;

/**
 * @member {Number} productId
 */
ProductPrice.prototype['productId'] = undefined;

/**
 * @member {Number} totalMetalCost
 */
ProductPrice.prototype['totalMetalCost'] = undefined;

/**
 * @member {Number} totalGemstoneCost
 */
ProductPrice.prototype['totalGemstoneCost'] = undefined;

/**
 * @member {Number} laborCost
 */
ProductPrice.prototype['laborCost'] = undefined;

/**
 * @member {Number} markupPercentage
 */
ProductPrice.prototype['markupPercentage'] = undefined;

/**
 * @member {Number} salePrice
 */
ProductPrice.prototype['salePrice'] = undefined;






export default ProductPrice;

