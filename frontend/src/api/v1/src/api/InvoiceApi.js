/**
 * Jewelry APIs
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import CreateInvoiceSellPayload from "../model/CreateInvoiceSellPayload";
import Invoice from "../model/Invoice";

/**
 * Invoice service.
 * @module api/InvoiceApi
 * @version 1.0.0
 */
export default class InvoiceApi {
  /**
   * Constructs a new InvoiceApi.
   * @alias module:api/InvoiceApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  constructor(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;
  }

  /**
   * Callback function to receive the result of the createSellInvoice operation.
   * @callback module:api/InvoiceApi~createSellInvoiceCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * @param {module:model/CreateInvoiceSellPayload} createInvoiceSellPayload
   * @param {module:api/InvoiceApi~createSellInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */
  createSellInvoice(createInvoiceSellPayload, callback) {
    let postBody = createInvoiceSellPayload;
    // verify the required parameter 'createInvoiceSellPayload' is set
    if (
      createInvoiceSellPayload === undefined ||
      createInvoiceSellPayload === null
    ) {
      throw new Error(
        "Missing the required parameter 'createInvoiceSellPayload' when calling createSellInvoice"
      );
    }

    let pathParams = {};
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = ["bearerAuth"];
    let contentTypes = ["application/json"];
    let accepts = ["*/*"];
    let returnType = Object;
    return this.apiClient.callApi(
      "/invoices/invoice",
      "POST",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback
    );
  }

  /**
   * Callback function to receive the result of the deleteInvoice operation.
   * @callback module:api/InvoiceApi~deleteInvoiceCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * @param {Number} id
   * @param {module:api/InvoiceApi~deleteInvoiceCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */
  deleteInvoice(id, callback) {
    let postBody = null;
    // verify the required parameter 'id' is set
    if (id === undefined || id === null) {
      throw new Error(
        "Missing the required parameter 'id' when calling deleteInvoice"
      );
    }

    let pathParams = {
      id: id,
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = ["*/*"];
    let returnType = Object;
    return this.apiClient.callApi(
      "/invoices/{id}",
      "DELETE",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback
    );
  }

  /**
   * Callback function to receive the result of the getAllInvoicesWithPagination operation.
   * @callback module:api/InvoiceApi~getAllInvoicesWithPaginationCallback
   * @param {String} error Error message, if any.
   * @param {Object} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * @param {Object} opts Optional parameters
   * @param {String} [customerName]
   * @param {Date} [transactionDateFrom]
   * @param {Date} [transactionDateEnd]
   * @param {Array.<module:model/String>} [transactionStatus]
   * @param {module:model/String} [sortBy = 'Optional[DESC]')]
   * @param {Number} [pageNo]
   * @param {Number} [pageSize]
   * @param {module:api/InvoiceApi~getAllInvoicesWithPaginationCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link Object}
   */
  getAllInvoicesWithPagination(opts, callback) {
    opts = opts || {};
    let postBody = null;

    let pathParams = {};
    let queryParams = {
      customerName: opts["customerName"],
      transactionDateFrom: opts["transactionDateFrom"],
      transactionDateEnd: opts["transactionDateEnd"],
      transactionStatus: this.apiClient.buildCollectionParam(
        opts["transactionStatus"],
        "multi"
      ),
      sortBy: opts["sortBy"],
      pageNo: opts["pageNo"],
      pageSize: opts["pageSize"],
    };
    let headerParams = {};
    let formParams = {};

    let authNames = [];
    let contentTypes = [];
    let accepts = ["*/*"];
    let returnType = Object;
    return this.apiClient.callApi(
      "/invoices/",
      "GET",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback
    );
  }

  /**
   * Callback function to receive the result of the getInvoiceIndetails operation.
   * @callback module:api/InvoiceApi~getInvoiceIndetailsCallback
   * @param {String} error Error message, if any.
   * @param {module:model/Invoice} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * @param {Number} id
   * @param {module:api/InvoiceApi~getInvoiceIndetailsCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/Invoice}
   */
  getInvoiceIndetails(id, callback) {
    let postBody = null;
    // verify the required parameter 'id' is set
    if (id === undefined || id === null) {
      throw new Error(
        "Missing the required parameter 'id' when calling getInvoiceIndetails"
      );
    }

    let pathParams = {
      id: id,
    };
    let queryParams = {};
    let headerParams = {};
    let formParams = {};

    let authNames = ["bearerAuth"];
    let contentTypes = [];
    let accepts = ["*/*"];
    let returnType = Invoice;
    return this.apiClient.callApi(
      "/invoices/{id}",
      "GET",
      pathParams,
      queryParams,
      headerParams,
      formParams,
      postBody,
      authNames,
      contentTypes,
      accepts,
      returnType,
      null,
      callback
    );
  }
}
